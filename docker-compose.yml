version: "3"

services:
  app:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - ./backend/media:/vol/web/media
      - ./backend/telegram:/telegram
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8080"
    env_file:
      - .env
    depends_on:
      - library

  library:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env

  telegram:
    build:
      context: .
      dockerfile: backend/telegram/Dockerfile
    ports:
      - "8008:8008"
    env_file:
      - .env

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: >
      sh -c "python manage.py wait_for_db --wait 6 &&
            celery -A library_service_app worker --loglevel=INFO -P eventlet"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - library
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: >
      sh -c "python manage.py wait_for_db --wait 6 &&
            celery -A library_service_app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - library
      - redis
